---
title: "Git collaboration"
date: "`r Sys.time()`"
date-format: "ddd, D of MMMM, YYYY"
date-modified: last-modified
lang: en
editor: source
engine: knitr
## ------  general Output Options
execute:     
  eval: false    # actually run? 
  echo: true     #  include source code in output
  warning: false  #  include warning code in output
  error: false    #  include error code in output
  output: false   # include output code in output (CHG in BLOCKS)
  # include: false   # R still runs but code and results DON"T appear in output  
  cache: false # normalmnte false
toc: true
fig-cap-location: top
tbl-cap-location: top
format:
  html:
    # theme: flatly #spacelab
    code-fold: false # redundant bc echo false 
    toc-depth: 3
    toc_float: true
    toc-location: left
    toc-title: Outline
    #embed-resources: true # external dependencies embedded (Not in ..._files/)
  # pdf:
  #   toc-depth: 2
  #   toc-title: Indice
  #   highlight-style: github
  #   #lang: it
  #   embed-resources: true # external dependencies embedded (Not in ..._files/)
format-links: false
---

::: {.callout-caution collapse="false"}
Web page construction in progress...
:::

# Collaboration

1. I create a test GH account **lula-test**  (associated to l__a__a@icloud.com)

2. I clone in  `/Users/testuser/GH_test/nerd_help` this repository "nerd-help" I own as **Lulliter** and (from there (I indicated that **lula-test** is a collaborator)


```{bash}
# positioned in parent folder /Users/testuser/GH_test/
git clone https://github.com/Lulliter/nerd_help.git
cd nerd_help
```

**Rules** 

+ THE MASTER BRANCH SHOULD ALWAYS BE DEPLOYABLE
  + you create new branches for new features and merge them into Master when they’re completed. 

  + It’s also important when collaborating that your team picks features that don’t have overlapping code. 

3. Here I create a new branch **colors_page** and I go there 

```{bash}
#  I create a new branch to add a color.qmd page and switch there 
git checkout -b colors_page 

# verify this with the command:
git branch
```


  + "checkout” is used to switch between branches. Adding the “-b” and a name at the end creates a new branch and then moves into that new branch for us.

In the branch, the collabrorator

+ makes some changes ...
+ add + commit + push 

3.b Wait 

Even if I am in the collaborator GH, lookg like the remote is considered the owner GH 

```{bash}
git remote -v         
# origin  https://github.com/Lulliter/nerd_help.git (fetch)
# origin  https://github.com/Lulliter/nerd_help.git (push)
```
so I must change te origin in the collaborator GH


```{bash}
git remote set-url origin  https://github.com/lula-test/nerd_help.git
```






# Reference 
+ [Blog on collab](https://medium.com/@jonathanmines/the-ultimate-github-collaboration-guide-df816e98fb67)
+ [The Pragmatic Git](https://blog.git-init.com/git-gold/) blogsite
+ [Tutorials](https://phoenixnap.com/kb/tag/git)
