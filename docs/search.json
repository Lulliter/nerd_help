[
  {
    "objectID": "tools/05_colors.html",
    "href": "tools/05_colors.html",
    "title": "5) Colors",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWeb page construction in progress…"
  },
  {
    "objectID": "tools/05_colors.html#colors",
    "href": "tools/05_colors.html#colors",
    "title": "5) Colors",
    "section": "Colors",
    "text": "Colors\n\npacificharbour_shades &lt;- c( \"#d4e6f3\",\"#b8d6eb\", \"#9cc6e3\", \"#80b6db\",  \"#72aed8\", \"#5b8bac\", \"#39576c\",  \"#16222b\")\n\npacificharbour  &lt;- \"#72aed8\"\njapyew &lt;- \"#d89c72\"\ntriad_verde &lt;- \"#d8cf71\"\ntriad_rosso &lt;- \"#d8717b\"\n\nbluMEFprinc &lt;- \"#2D337C\" # \"#2D337CFF\" (alpha = 1) OR rgb(45/255, 51/255, 124/255, 1)\nbluMEFsec &lt;- \"#455A8B\" # \"#455A8BFF\" (alpha = 1) OR rgb(69/255, 90/255, 139/255, 1)\nbluMEFsec_light &lt;- \"#455A8B99\"\nbluMEFsec_extralight &lt;- \"#455A8B33\" #  (alpha = .2) OR rgb(69/255, 90/255, 139/255, .2)\n\ngialloMEF_dark &lt;- \"#715115\"\ngialloMEFprinc &lt;- \"#BD8723\" # \"#BD8723FF\" (alpha = 1) OR rgb(189/255, 135/255, 35/255, 1)\ngialloMEF_light &lt;- \"#d7b77b\" # \"#BD8723FF\" (alpha = 1) OR rgb(189/255, 135/255, 35/255, 0.4)\ngialloMEF_extralight &lt;- \"#f1e7d3\" # \"#BD8723FF\" (alpha = 1) OR rgb(189/255, 135/255, 35/255, 0.2)\n\nbordeaux_dark &lt;- \"#51242c\" # \"#854442FF\" (alpha = 1) OR rgb(133/255, 68/255, 66/255, 1)\nbordeaux &lt;- \"#873c4a\" # \"#854442FF\" (alpha = 1) OR rgb(133/255, 68/255, 66/255, 1)\nbordeaux_light &lt;- \"#b78a92\" #\"#85444299\"\nbordeaux_extralight &lt;- \"#e7d8da\" #\" \"#e6cdcc\"\n\nviola &lt;- \"#2D337C\"\nviola_light &lt;- \"#8e94d6\" #\"#85444299\"\nviola_extralight &lt;- \"#d9dbf1\" #\" \"#e6cdcc\"\n\nverde_dark &lt;- \"#245048\"\nverde &lt;- \"#3c8678\" # \"#285E60FF\" (alpha = 1) OR rgb(40/255, 94/255, 96/255, 1)\nverde_light &lt;- \"#8ab6ae\" # \"#285E60FF\" (alpha = 1) OR rgb(40/255, 94/255, 96/255, 1)\nverde_extralight &lt;- \"#d8e6e4\"\nverdino &lt;- \"#a6bd23\"\n\nmarrone_dark  &lt;- \"#5d2b15\"\nmarrone &lt;- \"#9b4923\" # \"#866445FF\" (alpha = 1) OR rgb(134/255, 100/255, 69/255, 1)\nmarrone_light &lt;- \"#c3917b\"\nmarrone_extralight &lt;- \"#ebdad3\"\n\ngrigio_scuro &lt;- \"#4c4c4c\" # \"#A6A6A6FF\" (alpha = 1) OR rgb(166/255, 166/255, 166/255, 1)\ngrigio &lt;- \"#A6A6A6\"\ngrigioSfondo &lt;- \"#F2F2F2\" # \"#F2F2F2FF\" (alpha = 1) OR rgb(242/255, 242/255, 242/255, 1)\n\n\narancio_dark  &lt;- \"#8e550a\"\narancio &lt;- \"#bd710e\" # \"#866445FF\" (alpha = 1) OR rgb(134/255, 100/255, 69/255, 1)\narancio_light &lt;- \"#f0a441\"\narancio_extralight &lt;- \"#fbe8cf\"\n\nrosso &lt;- \"#9b2339\"\n# col2rgb( \"#854442\")"
  },
  {
    "objectID": "tools/05_colors.html#color-palettes",
    "href": "tools/05_colors.html#color-palettes",
    "title": "5) Colors",
    "section": "Color palettes",
    "text": "Color palettes\n\n#palette_g20 &lt;- c(\"#455A8B\", \"#854442\", \"#285E60\", \"#BD8723\", \"#866445\", \"#A6A6A6\")\n#mycolors_gradient &lt;- c(\"#ccf6fa\", \"#80e8f3\", \"#33d9eb\", \"#00d0e6\", \"#0092a1\")\n\n#                   fat gold  |Romaine Green| Blue ColaD |directoire Blue| Bourgeois  | Aztec Turquoise | Fulvous\nmycolors_contrast &lt;- c(\"#9b2339\", \"#E7B800\",\"#239b85\", \"#85239b\", \"#9b8523\",\"#23399b\", \"#d8e600\", \"#0084e6\",\"#399B23\",  \"#e60066\" , \"#00d8e6\",  \"#005ca1\", \"#e68000\")\n#theme_col &lt;-  c(\"#00d7e6\", \"#0065e6\",  \"#10069f\")  \nthree_col &lt;- c(\"#d8e600\", \"#e68000\",  \"#e60c00\")     \ntwo_col &lt;- c( \"#009E73\",\"#E69F00\")\n\ntwo_col_contrast &lt;- c( \"#399B23\",  \"#e60066\" )\n\n\nblu_contrast &lt;- c(\n  \"#0f7184\",\n  \"#56adbf\",\n  \"#5bd6ef\",\n  \"#025b6d\",\n  \"#b5f2ff\",\n  \"#1b5884\",\n  \"#72aed8\",\n  \"#98c8ea\",\n  \"#5097c9\",\n  \"#3a7aa8\",\n  \"#0286e5\",\n  \"#c6e7ff\",\n  \"#013d68\"\n  )\n\n\n# # -- Add custom fonts & make custom theme for ggplot2 -----\n# # -- da google\nsysfonts::font_add_google(name = \"Roboto Condensed\", family =  \"Condensed\")\nsysfonts::font_add(family = \"Roboto Condensed\", regular =  \"~/Applications/Roboto_Condensed/RobotoCondensed#-Regular.ttf\")\n# # -- da web\nsysfonts::font_add(family = \"Inconsolata\", regular = \"~/Applications/Inconsolata/static/Inconsolata_Expanded#.ttf\")\nsysfonts::font_families()\n# \n# # install.packages(\"extrafont\")\nlibrary(extrafont)\n# # -- quali ho nel sistema\nfonts()\n# # -- Import all the .ttf files from your system"
  },
  {
    "objectID": "tools/03b_Google_domain.html",
    "href": "tools/03b_Google_domain.html",
    "title": "Custom domain on Google domain",
    "section": "",
    "text": "The following steps help when setting up a new website that is hosted on GitHub Pages. Then, since GitHub Pages supports using custom domains, there are the instructions to re-direct tje site’s URL from the default &lt;user&gt;.github.io/domain to a custom domain name registered on Google Domain. Since GitHub Pages supports using custom domains, there are the instructions to re-direct the site’s URL from the default &lt;user&gt;.github.io/domain to a custom domain name registered on Google Domain.\nAssuming you have:",
    "crumbs": [
      "Custom domain on Google domain"
    ]
  },
  {
    "objectID": "tools/03b_Google_domain.html#on-github-initiate-a-repo-in-the-usual-way",
    "href": "tools/03b_Google_domain.html#on-github-initiate-a-repo-in-the-usual-way",
    "title": "Custom domain on Google domain",
    "section": "[on GitHub]: initiate a repo in the usual way",
    "text": "[on GitHub]: initiate a repo in the usual way\n\nCreate a new repo on GitHub\nGo on local PARENT directory of the intended repo\nExecute\n\n\ngit clone https://github.com/Lulliter/example.git\n\n\n\non Local/GitHub: deploy website via Github Pages\n\nadd content\ngit add/commit/push (or see my ./_render-deploy.sh)\n\n\nConfigure the Repo to publish on https://lulliter.github.io/example/ by going to Settings –&gt; Pages –&gt; (make sure to have a ./docs folder and indicate to GH that you will deploy from it)\non local: CNAME Looking forward, we will need to have a file named CNAME that contains a single row: your custom domain (in this case: thepadrinoz.com)\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\n❗ Before adding/committing to repo CNAME, at every push, the custom domain gets decoupled from GH Pages settings ….",
    "crumbs": [
      "Custom domain on Google domain"
    ]
  },
  {
    "objectID": "tools/03b_Google_domain.html#on-google-domain-buy-a-domain",
    "href": "tools/03b_Google_domain.html#on-google-domain-buy-a-domain",
    "title": "Custom domain on Google domain",
    "section": "[on Google Domain] Buy a domain",
    "text": "[on Google Domain] Buy a domain",
    "crumbs": [
      "Custom domain on Google domain"
    ]
  },
  {
    "objectID": "tools/03b_Google_domain.html#on-google-domain-set-up-a-hosted-zone",
    "href": "tools/03b_Google_domain.html#on-google-domain-set-up-a-hosted-zone",
    "title": "Custom domain on Google domain",
    "section": "[on Google Domain] set up a “HOSTED ZONE”",
    "text": "[on Google Domain] set up a “HOSTED ZONE”",
    "crumbs": [
      "Custom domain on Google domain"
    ]
  },
  {
    "objectID": "tools/03_custom_domain.html",
    "href": "tools/03_custom_domain.html",
    "title": "From GH Pages to custom domain",
    "section": "",
    "text": "(Source: www.freepik.com/)",
    "crumbs": [
      "From GH Pages to custom domain"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html",
    "href": "tools/01b_git_branches.html",
    "title": "1.b) Git Branches",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWeb page construction in progress…",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#create-checkout-a-branch",
    "href": "tools/01b_git_branches.html#create-checkout-a-branch",
    "title": "1.b) Git Branches",
    "section": "Create & checkout a branch",
    "text": "Create & checkout a branch\n\n“checkout” means to change the branch you are currently working on (or switch to)\n\n\n# 1/2 create b\ngit branch page_col #create a new branch named \"page_col\"\n\n# 2/2 then switch to b\ngit checkout page_col\n\n# or 1+2/2 CREATE + SWITCH BRANCHES\ngit checkout -b page_col  \n\nNow I see",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#switch-to-other-branch",
    "href": "tools/01b_git_branches.html#switch-to-other-branch",
    "title": "1.b) Git Branches",
    "section": "Switch to other branch",
    "text": "Switch to other branch\nYou can also use git switch other_branch which is more specific\n\ngit switch page_col\ncat .git/HEAD # (confirms me I moved)",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#rename-a-local-branch",
    "href": "tools/01b_git_branches.html#rename-a-local-branch",
    "title": "1.b) Git Branches",
    "section": "Rename a (local) branch",
    "text": "Rename a (local) branch\nIt’s the -m parameter !\n\nyou cannot rename a remte branch –&gt; you delete it and re-upload it\n\n\n# In currently checkedout \ngit branch -m better_name\n\n# in different branch (non HEAD)\ngit switch master\ngit branch test_branch # fake one \ngit branch -a  # it's there\ngit branch -m test_branch test_branch2\ngit branch -a  # yep!",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#push-upstream-a-local-branch",
    "href": "tools/01b_git_branches.html#push-upstream-a-local-branch",
    "title": "1.b) Git Branches",
    "section": "Push upstream a local branch",
    "text": "Push upstream a local branch\n\nCreate local branch\nSwitch to local branch\n\ngit push –-set-upstream command (the 1st time you push)\nThereafter git push (all subsequent git push commands automatically move local branch changes up to the remote branch.)\n\n\n# 1 Create local branch \n# 2 switch to local branch \ngit switch page_col\n# 3.a git push –set-upstream command (1st time)\ngit push  --set-upstream origin  page_col\n  # check \n  git branch -a # YAY!\n# 3.b git push origin (nest times )\ngit push origin",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#rename-a-remote-branch",
    "href": "tools/01b_git_branches.html#rename-a-remote-branch",
    "title": "1.b) Git Branches",
    "section": "Rename a (remote) branch",
    "text": "Rename a (remote) branch\nYou need to 1. Publish an existing local branch on remote git push -u origin local_branch 2. So you delete old one and push up a new one from local repository",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#merge-a-git-branch-into-master",
    "href": "tools/01b_git_branches.html#merge-a-git-branch-into-master",
    "title": "1.b) Git Branches",
    "section": "Merge a git branch into master",
    "text": "Merge a git branch into master\n\nList All Git Branches\nSwitch to Master\nMerge Branch into Master\nPush Changes (push the local changes to the remote repository so everyone working on the project can fetch the latest version.)\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nSince merging is a type of commit, it also requires a commit message. There are two ways to specify the commit message:\n\n\n\n\n# 1. List\ngit branch\n# 2. Switch\ngit checkout master\n# 3. The merge creates a merge commit, bringing together\n    # lines of development while preserving the history of the source branch.\ngit merge -m \"Prova di merge\" page_col\n# 4. Push the local changes to the remote repository\ngit push origin",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01b_git_branches.html#see-differences-bw-branches",
    "href": "tools/01b_git_branches.html#see-differences-bw-branches",
    "title": "1.b) Git Branches",
    "section": "See differences b/w branches",
    "text": "See differences b/w branches\n\ngit diff master..page_col '***.qmd'Q",
    "crumbs": [
      "1.b) Git Branches"
    ]
  },
  {
    "objectID": "tools/01_git.html",
    "href": "tools/01_git.html",
    "title": "Git",
    "section": "",
    "text": "(Source: www.freepik.com/)",
    "crumbs": [
      "Git"
    ]
  },
  {
    "objectID": "me.html",
    "href": "me.html",
    "title": "Luisa M. Mimmi",
    "section": "",
    "text": "Hi there!\nI am Luisa, a Policy & Data Analyst,  coffee addict, and  enthusiast.\nSince I am a self-taught programmer, I made this website to collect a bunch of nerdy instructions I keep forgetting.\nWhile this stuff is collected for personal use, I am glad if it can help anyone else ☺️\nYou can learn about me and my work via the links below.\n \n  \n   \n  \n    \n     Github\n  \n  \n      Google Scholar\n  \n  \n      Research Gate\n  \n  \n    \n     LinkedIn"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nerd help",
    "section": "",
    "text": "Welcome!\nThis is a Quarto website where I collect instructions for “nerdy” things.\n(Source: www.freepik.com/)\nI deploy it on GH pages here: https://lulliter.github.io/nerd_help/"
  },
  {
    "objectID": "r/01_tidyeval.html",
    "href": "r/01_tidyeval.html",
    "title": "1.a) Tidyeval and functional programming",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWeb page construction in progress…\nlibrary(tidyverse)\nlibrary(rlang)"
  },
  {
    "objectID": "r/01_tidyeval.html#non-standard-evaluation-in-tidyverse",
    "href": "r/01_tidyeval.html#non-standard-evaluation-in-tidyverse",
    "title": "1.a) Tidyeval and functional programming",
    "section": "NON STANDARD EVALUATION in TIDYVERSE",
    "text": "NON STANDARD EVALUATION in TIDYVERSE\n\n\nDEFUSING (DELAYING) function arguments: I can create a “quosure” with rlang::enquo() / rlang::enquos() so an expression can be examined, modified, and injected into other expressions."
  },
  {
    "objectID": "r/01_tidyeval.html#two-comlpementary-forms-of-nse-used-in-the-tidyverse",
    "href": "r/01_tidyeval.html#two-comlpementary-forms-of-nse-used-in-the-tidyverse",
    "title": "1.a) Tidyeval and functional programming",
    "section": "TWO (comlpementary) FORMS of NSE used in the Tidyverse",
    "text": "TWO (comlpementary) FORMS of NSE used in the Tidyverse\n1) TIDY SELECTION is used in SELECTION VERBS\ne.g. in dplyr::select() across(), relocate(), rename() and pull() use tidy selection where expressions are either interpreted in the context of the data frame (e.g. c(cyl, am) or evaluated in the user environment (e.g. all_of(), starts_with())\n\n# EXE `across()`\nsummarise_mean &lt;- function(data, vars) {\n    # all variables selected by user... \n    data %&gt;% summarise(n = n(), across({{ vars }}, mean))\n}\n# call \nstarwars %&gt;% \n    group_by(homeworld) %&gt;% \n    # with where\n    summarise_mean(where(is.numeric))\n\n2) DATA MASKING used in ACTION VERBS\ne.g. dplyr::mutate(), ggplot2::aes(), arrange(), count(), filter(), group_by(), and summarise(). Normal interactive programming (tidyverse) use data-masking (makes it easy to program) which it makes it harder to create functions.\n\n# EXE `group_by()`\nmy_summarise &lt;- function(data, group_var) {\n  data %&gt;%\n    group_by({{ group_var }}) %&gt;%\n    summarise(mean = mean(height))\n}\n\n# call(s) \nstarwars %&gt;% my_summarise (., homeworld) \nstarwars %&gt;% my_summarise (., sex) \n\nSOOOOO Passing data-masked arguments to functions requires injection (= quasiquotation)\nThis includes injection operators: + {{ embracing operator (rlang) + !! operator (base) + .data pronouns. + .env pronouns."
  },
  {
    "objectID": "r/01_tidyeval.html#quotedefuse-with-enquo-inside-f-unquoteinject-with",
    "href": "r/01_tidyeval.html#quotedefuse-with-enquo-inside-f-unquoteinject-with",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1/4 Quote/defuse with enquo (INSIDE f) Unquote/inject with !!\n",
    "text": "1/4 Quote/defuse with enquo (INSIDE f) Unquote/inject with !!\n\n\n# We can tell group_by() not to quote by using !! (pronounced “bang bang”). !! says something like “evaluate me!” or “unquote!”test \ngrouped_mean_1a &lt;- function(df, group_var, summarize_var) {\n    # Defuse the user expression in `*_var`\n    group_var = enquo(group_var)\n    summarize_var = enquo(summarize_var)\n\n  df %&gt;% \n    # Inject the expression contained in `*_var` \n  # inside a `summarise()` argument\n    group_by(!!group_var) %&gt;% \n    summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1a(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)\n\n# -------- OR \ngrouped_mean_1b &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n# Defuse and inject in a single step with the embracing operator\n    group_by({{group_var}} ) %&gt;% \n    summarize(mean = mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1b(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#quote-unquote-many-vars-with-...",
    "href": "r/01_tidyeval.html#quote-unquote-many-vars-with-...",
    "title": "1.a) Tidyeval and functional programming",
    "section": "2 Quote + Unquote (many) vars with ...\n",
    "text": "2 Quote + Unquote (many) vars with ...\n\nIn this case, summarize_var goes in front and ... last\n\n\n... can stand for multiple variables\n\n\n# ---- func \ngrouped_mean_2 &lt;- function(df,  summarize_var, ...) {\n  \n    ## -- Defuse the summarize_var = enquo(summarize_var) \n    ## ... group_var &gt;&gt;&gt;&gt; NO NEED FOR ENQUO with ... !\n    summarize_var = enquo(summarize_var)\n    \n    df %&gt;% \n        group_by(...) %&gt;% \n        summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# ---- call\ngrouped_mean_2(\n    df = starwars, \n    sex, homeworld, # (...)\n    summarize_var =  height \n)\n\n\n\n\n\n\n\nTip\n\n\n\n{...} Basically we are saying “everything I throw at the function will be carried along until I want to evaluate it”"
  },
  {
    "objectID": "r/01_tidyeval.html#name-of-the-var-left-of",
    "href": "r/01_tidyeval.html#name-of-the-var-left-of",
    "title": "1.a) Tidyeval and functional programming",
    "section": "3 … + name of the var left of :=\n",
    "text": "3 … + name of the var left of :=\n\n\n## --  define function \ngrouped_mean_3 &lt;- function(df,  summarize_var, ...) {\n#   group_var = ...  NO NEED FOR ENQUO!\n    summarize_var = enquo(summarize_var)\n    summarize_var_name &lt;- as_label(enquo(summarize_var))\n    \n    df %&gt;% \n        group_by(...) %&gt;% \n    #   summarize(!!summarize_var_name := mean(!!summarize_var, na.rm = TRUE))\n    # or  \n    summarize(!!str_c(\"My_mean_\", summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n    # ERRORE ?!?!?!?\n    # summarize(str_c(\"Mean_\", !!summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n}\n\n## --  call function\ngrouped_mean_3(\n    df = starwars, \n    sex, homeworld, #   group_var\n    summarize_var =  height \n)\n\n\n\n\n\n\n\nWarning\n\n\n\nOKKIO!!! Strange enough… seems like the unquoting must be of the WHOLE left-side of the equation not just of the quoted variable as I thought + !!summarize_var_name :=  ... OK + !!str_c(\"Mean_\", summarize_var_name) :=  ... OK: xchè?????? + str_c(\"Mean_\", !!summarize_var_name) :=  ... WRONG: xchè??????"
  },
  {
    "objectID": "r/01_tidyeval.html#b-or-name-of-the-var-left-of",
    "href": "r/01_tidyeval.html#b-or-name-of-the-var-left-of",
    "title": "1.a) Tidyeval and functional programming",
    "section": "3/4.b OR … + name of the var left of :=\n",
    "text": "3/4.b OR … + name of the var left of :=\n\n\n## --  define function \ngrouped_mean_3b &lt;- function(df,  summarize_var, ...) {\n  \n#   group_var = enquo(group_var) NO NEED FOR ENQUO!\n    summarize_var = enquo(summarize_var)\n#   summarize_var_name &lt;- as_label(enquo(summarize_var))\n    \n    df %&gt;% \n        group_by(...) %&gt;% \n    # summarize(!!summarize_var_name := mean(!!summarize_var, na.rm = TRUE))\n    # summarize(!!str_c(\"Mean_\", summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n    # or even better-er  \n        summarize(\n            \"Mean_{{summarize_var}}\" := mean(!!summarize_var, na.rm = TRUE))\n    \n}\n\n## --  call function\ngrouped_mean_3b(\n    df = starwars, \n    sex, homeworld,\n    summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#data",
    "href": "r/01_tidyeval.html#data",
    "title": "1.a) Tidyeval and functional programming",
    "section": "4/4 … + .data\n",
    "text": "4/4 … + .data\n\nIt’s good practice to prefix named arguments with a . (.data)to reduce the risk of conflicts between your arguments and the arguments passed to ...\n\n## --  define function \ngrouped_mean_4 &lt;- function(data,  summarize_var, ...) {\n  \n#   group_var = enquo(group_var) NO NEED FOR ENQUO!\n    summarize_var = enquo(summarize_var)\n    summarize_var_name &lt;- as_label(enquo(summarize_var))\n\n    data %&gt;% \n        group_by(...) %&gt;% \n    #   summarize(!!summarize_var_name := mean(!!summarize_var, na.rm = TRUE))\n    # or even better \n    summarize(!!str_c(\"Mean_\", summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n    \n}\n\n## --  call function\ngrouped_mean_4(\n    data = starwars, \n    summarize_var =  height ,\n    sex, homeworld\n)"
  },
  {
    "objectID": "tools/01a_git_intro.html",
    "href": "tools/01a_git_intro.html",
    "title": "1.a) Git introduction",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWeb page construction in progress…",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#check-which-ssh-i-already-have",
    "href": "tools/01a_git_intro.html#check-which-ssh-i-already-have",
    "title": "1.a) Git introduction",
    "section": "Check which ssh I already have",
    "text": "Check which ssh I already have\n\nI have a github SSH\n\n\n# where to see my SSH \nlibrary(credentials)",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#on-github-i-create-a-new-repo",
    "href": "tools/01a_git_intro.html#on-github-i-create-a-new-repo",
    "title": "1.a) Git introduction",
    "section": "1) On Github I create a NEW repo",
    "text": "1) On Github I create a NEW repo\n[…]",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#a-in-terminal-clone-remote-repo-locally",
    "href": "tools/01a_git_intro.html#a-in-terminal-clone-remote-repo-locally",
    "title": "1.a) Git introduction",
    "section": "2.a) In Terminal clone remote repo locally",
    "text": "2.a) In Terminal clone remote repo locally\ni) position myself in the Folder ABOVE the desired git repo\n\n#  My `ParentFolder` for github repos...\ncd cd ~/Github/  \n\nii) clone remote repo locally locally\nYou can only push to two types of URL addresses:\n\nAn HTTPS URL like https://github.com/user/repo.git\nAn SSH URL, like git@github.com:user/repo.git\n\nGit associates a remote URL with a name, and your default remote is usually called origin\n\n# if https (Clone using the web URL.)\ngit clone https://github.com/Lulliter/nerd_help.git\n# if SSH (Use a password-protected SSH key.)\ngit clone git@github.com:Lulliter/nerd_help.git",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#b-with-usethis-clone-remote-repo-locally",
    "href": "tools/01a_git_intro.html#b-with-usethis-clone-remote-repo-locally",
    "title": "1.a) Git introduction",
    "section": "2.b) With {usethis} clone remote repo locally",
    "text": "2.b) With {usethis} clone remote repo locally\nIn the R console (in any R session)\n\nOKKIO: only need the parent folder name (~/Github/) because the actual folder name will be the repo name !\n\n\nlibrary(usethis)\nusethis::create_from_github(\n    # https or SSH both ok \n    repo_spec = \"git@github.com:Lulliter/ideeperpavia.git\",\n    # destdir specifies the parent directory where the new folder (and local Git repo) will live. \n    destdir = \"~/Github/\"\n)\n\nThis Creates a new local directory in destdir, which is all of these things:\n\na directory or folder on your computer\na Git repository, linked to a remote GitHub repository\nan RStudio Project\n\nOpens a new RStudio instance in the new Project",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#optional---i-copy-there-some-stuff-i-already-had-in-a-different-folder",
    "href": "tools/01a_git_intro.html#optional---i-copy-there-some-stuff-i-already-had-in-a-different-folder",
    "title": "1.a) Git introduction",
    "section": "3) - OPTIONAL - I copy there some stuff I already had in a different folder",
    "text": "3) - OPTIONAL - I copy there some stuff I already had in a different folder\n\n# copy other LOCAL --&gt; git LOCAL\ncp -r ~/OtherLocalDrive/nerd_help/   ~/Github/_nerd_help",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#i-make-changes-in-the-local-repo",
    "href": "tools/01a_git_intro.html#i-make-changes-in-the-local-repo",
    "title": "1.a) Git introduction",
    "section": "4) I make changes in the local repo",
    "text": "4) I make changes in the local repo\nFor example, I actually wanted a quarto website, so I open TERMINAL and do\n\nquarto create project website mysite",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#check-what-happened",
    "href": "tools/01a_git_intro.html#check-what-happened",
    "title": "1.a) Git introduction",
    "section": "5) Check what happened…",
    "text": "5) Check what happened…\n\ncd ~/Github/_nerd_help \ngit remote show origin \ngit status",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#add-local-changes-to-staging-area",
    "href": "tools/01a_git_intro.html#add-local-changes-to-staging-area",
    "title": "1.a) Git introduction",
    "section": "6) Add local changes to staging area",
    "text": "6) Add local changes to staging area\n\ngit add -A # everything\ngit add -u # only already tracked stuff",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#commit-desired-changes",
    "href": "tools/01a_git_intro.html#commit-desired-changes",
    "title": "1.a) Git introduction",
    "section": "7) Commit desired changes",
    "text": "7) Commit desired changes\n\n# Create Std commit \"message\"....\nmsg=\"rebuilt on `date`\"\nif [ $# -eq 1 ]\n  then msg=\"$1\"\nfi\n# ... Commit Those changes.\ngit commit -m \"$msg\"\n\n# or  \ngit commit -m \"whatever message\"",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#push-source-and-build-repos.",
    "href": "tools/01a_git_intro.html#push-source-and-build-repos.",
    "title": "1.a) Git introduction",
    "section": "8) Push source and build repos.",
    "text": "8) Push source and build repos.\n\ngit push origin master",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#see-differences-bw-commits",
    "href": "tools/01a_git_intro.html#see-differences-bw-commits",
    "title": "1.a) Git introduction",
    "section": "See differences b/w commits",
    "text": "See differences b/w commits\n\n# diff between 2 latest commits (1 on branch) only in files I care \ngit diff dc87ae c86edffc16 \"*.qmd\"\n\n#(To view diff between next commit (HEAD) and parent commit (SHA 682bc))\ngit diff dc87ae..  \ngit diff dc87ae^..HEAD  '***.qmd' #ORQ\ngit diff dc87ae..HEAD   #OR\n\n# b/w old commit on branch and HEAD \ngit diff 693e61^..HEAD",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/01a_git_intro.html#your-branch-is-ahead-of-originmaster-by-x-commits",
    "href": "tools/01a_git_intro.html#your-branch-is-ahead-of-originmaster-by-x-commits",
    "title": "1.a) Git introduction",
    "section": "Your branch is ahead of ‘origin/master’ by “x” commits",
    "text": "Your branch is ahead of ‘origin/master’ by “x” commits\nE.g. I had this occurring because I wanted to push a heavy PDF download button and git push couldn’t go through.\n\nmake a BACKUP of local!\nGo back before the commit\n\n\n\nBrutal: reset your local master to the state on your remote origin (a.k.a. last pushed updates)\n\n\n\ngit reset --hard origin/master\n\n\n\n\nConservative option: reset to before last commit saving local changes\n\n\n\n\n--soft = you will remove the last commit from the current branch, but the file changes will stay in your working tree & the changes will stay on your index (so it is enough to commit them)\n\n--mixed = you will still keep the changes in your working tree but not on the index (you have to add and commit again)\n\n--hard = you will lose all uncommited changes and all untracked files in addition to the changes introduced in the last commit\n\n\n\n\ngit reset --soft HEAD~1   \n\n\n\n\nAnother useful option: similar to soft\n\n\n\n\n--keep It only resets the files which are different between the current HEAD and the given commit. It aborts the reset if one or more of these files has uncommited changes. It basically acts as a safer version of hard.\n\n\n\n\n# Assuming HEAD points at 7e05a95 \n  # 7e05a95  (HEAD -&gt; main) Update a\n  # e62add5  Update b\n  # ca9ae0a  Update a\ngit reset --mixed HEAD^",
    "crumbs": [
      "1.a) Git introduction"
    ]
  },
  {
    "objectID": "tools/02_quarto.html",
    "href": "tools/02_quarto.html",
    "title": "2) Quarto projects and websites",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWebsite construction in progress…"
  },
  {
    "objectID": "tools/03a_AWS.html",
    "href": "tools/03a_AWS.html",
    "title": "Custom domain on AWS",
    "section": "",
    "text": "The following steps help when setting up a new website that is hosted on GitHub Pages. Then, since GitHub Pages supports using custom domains, there are the instructions to re-direct tje site’s URL from the default &lt;user&gt;.github.io/domain to a custom domain name registered on AWS. Since GitHub Pages supports using custom domains, there are the instructions to re-direct the site’s URL from the default &lt;user&gt;.github.io/domain to a custom domain name registered on AWS.\nAssuming you have:",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-github-initiate-a-repo-in-the-usual-way",
    "href": "tools/03a_AWS.html#on-github-initiate-a-repo-in-the-usual-way",
    "title": "Custom domain on AWS",
    "section": "[on GitHub]: initiate a repo in the usual way",
    "text": "[on GitHub]: initiate a repo in the usual way\n\nCreate a new repo on GitHub\nGo on local PARENT directory of the intended repo\nExecute\n\n\ngit clone https://github.com/Lulliter/example.git\n\n\non Local/GitHub: deploy website via Github Pages\n\nadd content\ngit add/commit/push (or see my ./_render-deploy.sh)\n\n\nConfigure the Repo to publish on https://lulliter.github.io/example/ by going to Settings –&gt; Pages –&gt;\n\n\nmake sure to have a ./docs folder and indicate to GH that you will deploy from it\nand to create a .nojekyll file for GitHub pages to work with a quarto website!\n\n\non local: CNAME Looking forward, we will need to have a file named CNAME that contains a single row: your custom domain (in this case: thepadrinoz.com)\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\n❗ Before adding/committing to repo CNAME, at every push, the custom domain gets decoupled from GH Pages settings ….",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-aws-buy-a-domain",
    "href": "tools/03a_AWS.html#on-aws-buy-a-domain",
    "title": "Custom domain on AWS",
    "section": "[on AWS] Buy a domain",
    "text": "[on AWS] Buy a domain\n\non AWS: Go to Route53, under ‘register domain’ then follow instructions to buy a domain (usually 10$/12$ per year). e.g. example.com\n\non AWS Route53: domain registration should be done automatically\n\nfirst, it will appear under DOMAINS –&gt; Pending Requests [a verification email will be sent by AWS]\nafter it will be under DOMAINS –&gt; Registered Domains\n\n\n\nI had already bought some DOMAIN from Amazon… + lulliter.com + R4biostats.com",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-aws-set-up-a-hosted-zone",
    "href": "tools/03a_AWS.html#on-aws-set-up-a-hosted-zone",
    "title": "Custom domain on AWS",
    "section": "[on AWS] set up a “HOSTED ZONE”",
    "text": "[on AWS] set up a “HOSTED ZONE”\nI see “HostedZone created by Route53 Registrar”\nNOTE: If AWS did not automatically create a hosted zone upon buying the domain name, create one.\n\n\n\n\n\n\nTip\n\n\n\n\n\nSo for example if you bought the domain name username.com, you create the hosted zone name username.com. Once created open it up. Once you have created the hosted zone, open it up, click the Type NS, and copy the values on the right (4x url’s to awsdns addresses). Then go to the registered domains from the left menu, and in the Name Servers section on the right, click Add or edit name servers, delete any contents in there, and add the 4x lines you just copied one by one. This gives your domain name the address to the hosted zone.",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-aws-redirect-the-domain-to-my-website-on-github-pages",
    "href": "tools/03a_AWS.html#on-aws-redirect-the-domain-to-my-website-on-github-pages",
    "title": "Custom domain on AWS",
    "section": "[on AWS]: Redirect the domain to my website on Github pages",
    "text": "[on AWS]: Redirect the domain to my website on Github pages\n\n\n\n\n\n\nNote\n\n\n\n\n\nFollowing\n\n\nBEn Wiz’s tutorial and + GITHUB ’s tutorial\n\n\n\n\n\n\nLog into AWS Console –&gt; Route53\nIn your Route53 dashboard, click hosted zones \n\nClick on the hyperlinked name of the domain you would like to use so it can open its specific page. Without doing nothing I already see:\n\n\nexample.com — Type NS — …\n\nexample.com — Type SOA — …\n\n\n\n\n\n\nClick Create Record A (This will be your example.com rule)\n\nDo not enter anything into the Name field\nUnder the Type dropdown, select A — IPv4 addresses\nThe Alias toggle should be UNSELECTED\nEnter the following four IP addresses into the value text area.\n\n\n\n    185.199.108.153\n   185.199.109.153\n   185.199.110.153\n   185.199.111.153\n\nThen click Save Record Set “Create Record” .",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-aws-configuring-a-subdomain-www.example.com",
    "href": "tools/03a_AWS.html#on-aws-configuring-a-subdomain-www.example.com",
    "title": "Custom domain on AWS",
    "section": "[on AWS]: Configuring a subdomain www.example.com\n",
    "text": "[on AWS]: Configuring a subdomain www.example.com\n\n\n\nCreate another A type of record set (your www.example.com rule, aka an alias for example.com)\n\nInto the Name field, enter ‘www’\n\nUnder the Type dropdown, select A — IPv4 addresses, again\nSELECT Alias on the dashboard, from dropdown menu, choose “Alias to another record in this hosted zone” and then www.example.com. (it has the full stop!!)\nThen click Save Record Set Create Record .\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nIn GH Pages, when you write under \"Custom domain\" the new name of your vanity example.com domain something will happen. If you are publishing your site from a branch (e.g. master branch / ./docs), this will create a commit that adds a CNAME file directly to the root of your source branch.\n💡 SO next time you push from local it will tell that your branch is ahead or something an you must do some form of git pull\n\n# praticamente pull da remoto + insieme merge ai cambiamenti locali \ngit config pull.rebase false\n\n\n\n\n\n\nLast, go back to GitHub repository’s settings tab\n\nScroll down to the GitHub Pages section\nIn the Custom domain field enter your custom domain: example.com\n\nClick Save\nCheck Enforce HTTPS",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-local-adjust-the-.yml-file-of-your-website",
    "href": "tools/03a_AWS.html#on-local-adjust-the-.yml-file-of-your-website",
    "title": "Custom domain on AWS",
    "section": "[on local]: Adjust the .yml file of your website",
    "text": "[on local]: Adjust the .yml file of your website\nLastest 😥, go to “_site.yml” and replace base_url\n\n##  e.g.  in quarto.yml \n\nwebsite:\n  title: \"The example KOOL stuff\"\n  site-url: https://example.com",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/03a_AWS.html#on-gh-pages-fix-ghpages-error",
    "href": "tools/03a_AWS.html#on-gh-pages-fix-ghpages-error",
    "title": "Custom domain on AWS",
    "section": "[on GH Pages]: fix GHPages error",
    "text": "[on GH Pages]: fix GHPages error\nGH Pages is asking me to point www.domain.com to a CNAME record (instead of an A record)",
    "crumbs": [
      "Custom domain on AWS"
    ]
  },
  {
    "objectID": "tools/04_boh.html",
    "href": "tools/04_boh.html",
    "title": "4) Bonus Stuff",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWebsite construction in progress…"
  },
  {
    "objectID": "tools/04_boh.html#topics",
    "href": "tools/04_boh.html#topics",
    "title": "4) Bonus Stuff",
    "section": "Topics",
    "text": "Topics\n\nnew mac setup\n\nshell commands\n\nlooking for files CLI /Users/luisamimmi/Documents/__nerd/00_shell_git _make/Looking4Files.sh\n\n\n\nunderstanding collaboration on git /GH\n\nExample of things\n\n\n_variables.yml for quarto projects variables\nExample of gitignore\n\n\n\nAuthentication for Github\n\nUsing the SSH protocol (credentials)\nCloning GitHub repositories using SSH\nCloning GitHub repositories using HTTPS\n\n\nmake\nVS Code\n…"
  },
  {
    "objectID": "r/01_tidyeval.html#two-complementary-forms-of-nse-used-in-the-tidyverse",
    "href": "r/01_tidyeval.html#two-complementary-forms-of-nse-used-in-the-tidyverse",
    "title": "1.a) Tidyeval and functional programming",
    "section": "TWO (complementary) FORMS of NSE used in the Tidyverse",
    "text": "TWO (complementary) FORMS of NSE used in the Tidyverse\n1) TIDY SELECTION is used in SELECTION VERBS\ne.g. in dplyr::select() across(), relocate(), rename() and pull() use tidy selection where expressions are either interpreted in the context of the data frame (e.g. c(cyl, am) or evaluated in the user environment (e.g. all_of(), starts_with())\n\n# EXE `across()`\nsummarise_mean &lt;- function(data, vars) {\n    # all variables selected by user... \n    data %&gt;% summarise(n = n(), across({{ vars }}, mean))\n}\n# call \nstarwars %&gt;% \n    group_by(homeworld) %&gt;% \n    # with where\n    summarise_mean(where(is.numeric))\n\n2) DATA MASKING used in ACTION VERBS\nACTION VERBS = dplyr::mutate(), ggplot2::aes(), arrange(), count(), filter(), group_by(), and summarise().\nNormal interactive programming (tidyverse) use data-masking, which allow you to use variables in the “current” data frame without any extra syntax. This:\n\n(+) makes it nicer to interactively work (no extra typing of data$column, just column), but\n(-) makes it harder to create your own functions (it could be ambiguous what is a data-variable and what is an env-variable).\n\n\n## ---  tidyverse non std eval \nstarwars %&gt;% \n filter (homeworld == \"Tatooine\")  \n\nSOOOOO We need some way to add $ back into the picture. Passing data-masked arguments to functions requires INJECTION (= quasiquotation), i.e. TO INJECT A FUNCTION ARGUMENT IN A DATA-MASKED CONTEST, YOU EMBRACE IT WITH {{\nInside data-masking function (actions), we can use injection operators:\n    + `{{` embracing operator (`rlang`)\n    + `!!` operator (`base`) \n    + `.data` pronouns. \n    + `.env` pronouns."
  },
  {
    "objectID": "tools/02_quarto.html#markdown-divs",
    "href": "tools/02_quarto.html#markdown-divs",
    "title": "2) Quarto projects and websites",
    "section": "Markdown divs\n",
    "text": "Markdown divs\n\nRather than write out the HTML, you can use “fenced Div blocks”, which somewhat resemble code chunks. These Div blocks use the following syntax, where # denotes the ID, and . denotes a class.\nExample:\n\nthis (markdown) is =\n\n::: {#hello .greeting .message style=\"color: red;\"}\nHello **world**!\n:::\n\nHello world!\n\n\nto this (HTLM)\n\n&lt;div id=\"hello\" class=\"greeting\"&gt;\n  Hello world!\n&lt;/div&gt;\n\nand this (markdown) is =\n\n::: {style=\"color: red; border: solid black;\"}\nGoodbye, world.\n:::\n\nGoodbye, world.\n\n\nand to this (HTLM)\n\n&lt;div style=\"color: red; border: solid black;\"&gt;\n  Goodbye, world.\n&lt;/div&gt;"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-with-embracing-variable-inside-custom-f",
    "href": "r/01_tidyeval.html#defuse-with-embracing-variable-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "Defuse with “embracing” {variable } (inside custom f)",
    "text": "Defuse with “embracing” {variable } (inside custom f)\n\n## --- own function with tidyverse non std eval ACTION VERB `group_by()`\nmy_summarise &lt;- function(data, group_var) {\n  data %&gt;%\n# tell to inject whatever argument supplied to the function (homeworld) \n        # **in place** of \"group_var\" \n    group_by({{ group_var }}) %&gt;%\n    summarise(mean = mean(height))\n}\n\n# call(s) \nmy_summarise (starwars, homeworld) \nmy_summarise (starwars, sex) \n\n\n\n\n\n\n\nWarning\n\n\n\nWithout {group_var} I would get the error“! Must group by variables found in .data. ✖ Column group_var is not found.”"
  },
  {
    "objectID": "r/01_tidyeval.html#a-quotedefuse-with-nothing-unquoteinject-with-inside-custom-f",
    "href": "r/01_tidyeval.html#a-quotedefuse-with-nothing-unquoteinject-with-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1a Quote/defuse with (nothing!) + Unquote/inject with {{ (inside custom f)",
    "text": "1a Quote/defuse with (nothing!) + Unquote/inject with {{ (inside custom f)\n\n# -------- OR \ngrouped_mean_1a &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n# Defuse and inject in a single step with the embracing operator\n    group_by({{group_var}} ) %&gt;% \n    summarize(mean = mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1a(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#b-quotedefuse-with-enquo-unquoteinject-with-inside-custom-f",
    "href": "r/01_tidyeval.html#b-quotedefuse-with-enquo-unquoteinject-with-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1b Quote/defuse with enquo + Unquote/inject with !! (inside custom f)",
    "text": "1b Quote/defuse with enquo + Unquote/inject with !! (inside custom f)\n\n# We can tell group_by() not to quote by using !! (pronounced “bang bang”). !! says something like “evaluate me!” or “unquote!”test \n\ngrouped_mean_1b &lt;- function(df, group_var, summarize_var) {\n    ## -- Defuse the user expression in `*_var`\n    group_var = enquo(group_var)\n    summarize_var = enquo(summarize_var)\n\n  df %&gt;% \n    ## -- Inject the expression contained in `*_var` \n    group_by(!!group_var) %&gt;% \n    summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1b(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#a-defuse-nothing-inject-with-inside-custom-f",
    "href": "r/01_tidyeval.html#a-defuse-nothing-inject-with-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1a Defuse (nothing!) + Inject with {{ (inside custom f)",
    "text": "1a Defuse (nothing!) + Inject with {{ (inside custom f)\n\n# -------- OR \ngrouped_mean_1a &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n# Defuse and inject in a single step with the embracing operator\n    group_by({{group_var}} ) %&gt;% \n    summarize(mean = mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1a(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-nothing-inject-with-inside-custom-f",
    "href": "r/01_tidyeval.html#defuse-nothing-inject-with-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1 Defuse (nothing!) + Inject with {{ (inside custom f)",
    "text": "1 Defuse (nothing!) + Inject with {{ (inside custom f)\n\n# -------- OR \ngrouped_mean_1 &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n# Defuse and inject in a single step with the embracing operator\n    group_by({{group_var}} ) %&gt;% \n    summarize(mean = mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-with-enquo-inject-with-inside-custom-f",
    "href": "r/01_tidyeval.html#defuse-with-enquo-inject-with-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "2 Defuse with enquo + Inject with !! (inside custom f)",
    "text": "2 Defuse with enquo + Inject with !! (inside custom f)\n\n# We can tell group_by() not to quote by using !! (pronounced “bang bang”). !! says something like “evaluate me!” or “unquote!”test \n\ngrouped_mean_2 &lt;- function(df, group_var, summarize_var) {\n    ## -- Defuse the user expression in `*_var`\n    group_var = enquo(group_var)\n    summarize_var = enquo(summarize_var)\n\n  df %&gt;% \n    ## -- Inject the expression contained in `*_var` \n    group_by(!!group_var) %&gt;% \n    summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# call\ngrouped_mean_2(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-...-inject-...",
    "href": "r/01_tidyeval.html#defuse-...-inject-...",
    "title": "1.a) Tidyeval and functional programming",
    "section": "3 Defuse ... + Inject ...\n",
    "text": "3 Defuse ... + Inject ...\n\nIn this case, summarize_var goes in front and ... last\n\n\n... can stand for multiple variables\n\n\n# ---- func \ngrouped_mean_3 &lt;- function(df,  summarize_var, ...) {\n  \n    ## -- Defuse the summarize_var = enquo(summarize_var) \n    ## ... group_var &gt;&gt;&gt;&gt; NO NEED FOR ENQUO with ... !\n    summarize_var = enquo(summarize_var)\n    \n    df %&gt;% \n        group_by(...) %&gt;% \n        summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# ---- call\ngrouped_mean_3(\n    df = starwars, \n    sex, homeworld, # (...)\n    summarize_var =  height \n)\n\n\n\n\n\n\n\nTip\n\n\n\n{...} Basically we are saying “everything I throw at the function will be carried along until I want to evaluate it”"
  },
  {
    "objectID": "r/01_tidyeval.html#b-nothing-left-side",
    "href": "r/01_tidyeval.html#b-nothing-left-side",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1b (nothing!) + {{ & left side := !!!!",
    "text": "1b (nothing!) + {{ & left side := !!!!\n\nSuper compact left side syntax with \"sometext_{{group_var}}\" :=\n\n\n\n# --- func\ngrouped_mean_1b &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n        # Defuse and inject in a single step with the embracing operator\n        group_by({{group_var}} ) %&gt;% \n        summarize( \"BY_{{group_var}}\" := mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# --- call\ngrouped_mean_1b (\n    df = starwars, \n    group_var = sex, \n    summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#b-enquo-left-side",
    "href": "r/01_tidyeval.html#b-enquo-left-side",
    "title": "1.a) Tidyeval and functional programming",
    "section": "2b enquo + !! & left side :=\n",
    "text": "2b enquo + !! & left side :=\n\n2 things needed here :\n+  `as_label(enquo(____var))`\n+  left side syntax with `!!str_c(\"Mean_\", ____var) :=`\n\n# --- func\ngrouped_mean_2b &lt;- function(df, group_var, summarize_var) {\n    ## -- Defuse the user expression in `*_var`\n    group_var = enquo(group_var)\n    summarize_var = as_label(enquo(summarize_var)) # as_label(enquo !!!!!\n    \n    df %&gt;% \n        ## -- Inject the expression contained in `*_var` \n        group_by(!!group_var) %&gt;% \n        summarize(!!str_c(\"Mean_\", summarize_var) := mean(!!summarize_var, na.rm = TRUE))\n}\n\n# --- call\ngrouped_mean_2b(df = starwars, \n                     group_var = sex, \n                     summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#b-...-...-left-side",
    "href": "r/01_tidyeval.html#b-...-...-left-side",
    "title": "1.a) Tidyeval and functional programming",
    "section": "3b ... + ... & left side :=\n",
    "text": "3b ... + ... & left side :=\n\n\n## --  define function \ngrouped_mean_3b &lt;- function(df,  summarize_var, ...) {\n#   group_var = ...  NO NEED FOR ENQUO!\n    summarize_var = enquo(summarize_var)\n    summarize_var_name &lt;- as_label(enquo(summarize_var))\n    \n    df %&gt;% \n        group_by(...) %&gt;% \n    #   summarize(!!summarize_var_name := mean(!!summarize_var, na.rm = TRUE))\n    # or  \n    summarize(!!str_c(\"My_mean_\", summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n    # ERRORE ?!?!?!?\n    # summarize(str_c(\"Mean_\", !!summarize_var_name) := mean(!!summarize_var, na.rm = TRUE))\n}\n\n## --  call function\ngrouped_mean_3b(df = starwars, \n                     sex, homeworld, #  group_var\n                     summarize_var =  height \n)\n\n\n\n\n\n\n\nWarning\n\n\n\nOKKIO!!! Strange enough… seems like the unquoting must be of the WHOLE left-side of the equation not just of the quoted variable as I thought + !!summarize_var_name :=  ... OK + !!str_c(\"Mean_\", summarize_var_name) :=  ... OK: xchè?????? + str_c(\"Mean_\", !!summarize_var_name) :=  ... WRONG: xchè??????"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-nothing-inject-inside-custom-f",
    "href": "r/01_tidyeval.html#defuse-nothing-inject-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "1 Defuse (nothing!) + Inject {{ (inside custom f)",
    "text": "1 Defuse (nothing!) + Inject {{ (inside custom f)\n\n# -------- OR \ngrouped_mean_1 &lt;- function(df, group_var, summarize_var) {\n    df %&gt;% \n# Defuse and inject in a single step with the embracing operator\n    group_by({{group_var}} ) %&gt;% \n    summarize(mean = mean({{summarize_var}} , na.rm = TRUE))\n}\n\n# call\ngrouped_mean_1(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/01_tidyeval.html#defuse-enquo-inject-inside-custom-f",
    "href": "r/01_tidyeval.html#defuse-enquo-inject-inside-custom-f",
    "title": "1.a) Tidyeval and functional programming",
    "section": "2 Defuse enquo + Inject !! (inside custom f)",
    "text": "2 Defuse enquo + Inject !! (inside custom f)\n\n# We can tell group_by() not to quote by using !! (pronounced “bang bang”). !! says something like “evaluate me!” or “unquote!”test \n\ngrouped_mean_2 &lt;- function(df, group_var, summarize_var) {\n    ## -- Defuse the user expression in `*_var`\n    group_var = enquo(group_var)\n    summarize_var = enquo(summarize_var)\n\n  df %&gt;% \n    ## -- Inject the expression contained in `*_var` \n    group_by(!!group_var) %&gt;% \n    summarize(mean = mean(!!summarize_var, na.rm = TRUE))\n}\n\n# call\ngrouped_mean_2(\n  df = starwars, \n  group_var = sex, \n  summarize_var =  height \n)"
  },
  {
    "objectID": "r/02_r_vscode.html",
    "href": "r/02_r_vscode.html",
    "title": "02) Using R from VS Code",
    "section": "",
    "text": "Caution\n\n\n\n\n\nWeb page construction in progress…\n(as of 25/5/2022) # Reference"
  },
  {
    "objectID": "r/02_r_vscode.html#new-python-version",
    "href": "r/02_r_vscode.html#new-python-version",
    "title": "02) Using R from VS Code",
    "section": "NEW Python version",
    "text": "NEW Python version\n\nVersion: Python 3.9.13 for macOS 10.9 or later\nInterpreter path: /usr/local/bin/python3"
  },
  {
    "objectID": "r/02_r_vscode.html#gotcha",
    "href": "r/02_r_vscode.html#gotcha",
    "title": "02) Using R from VS Code",
    "section": "Gotcha!!!",
    "text": "Gotcha!!!\n\npython3 --version\n# Python 3.9.13"
  },
  {
    "objectID": "r/02_r_vscode.html#ways-to-work-with-python",
    "href": "r/02_r_vscode.html#ways-to-work-with-python",
    "title": "02) Using R from VS Code",
    "section": "3 ways to work with python",
    "text": "3 ways to work with python\n— 1) Launch Idle shell + execute\n(it comes installed with the new python3)\n— 2) Execute program in shell\n\npython3 Python3_9_test.py  \n# it prompts for name etc... \n\n— 3) Execute program in VS code\nJust look for the arrow from the top of the .py file"
  },
  {
    "objectID": "r/02_r_vscode.html#install-radian-again",
    "href": "r/02_r_vscode.html#install-radian-again",
    "title": "02) Using R from VS Code",
    "section": "install radian [again!!!]",
    "text": "install radian [again!!!]\n\npip3 install -U radian\n# then as it suggests\n/Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9 -m pip install --upgrade pip\n\nCheck\n\nradian --version\n\nradian version: 0.6.3 r executable: /Library/Frameworks/R.framework/Resources/bin/R r version: 4.1.0 python executable: /Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9 python version: 3.9.13"
  },
  {
    "objectID": "r/02_r_vscode.html#settings.json-path",
    "href": "r/02_r_vscode.html#settings.json-path",
    "title": "02) Using R from VS Code",
    "section": "Settings.json path",
    "text": "Settings.json path\n/Users/luisamimmi/Library/Application Support/Code/User/settings.json\nOpen by ctr+shift+P and then “Preferences: Open Settings (json)”\nOpen in finder\nFrom shell\n\nopen -a Finder /Library/Frameworks/R.framework/Resources"
  },
  {
    "objectID": "r/02_r_vscode.html#modify-r-extension-settings",
    "href": "r/02_r_vscode.html#modify-r-extension-settings",
    "title": "02) Using R from VS Code",
    "section": "modify R Extension settings",
    "text": "modify R Extension settings\nI need to specify the path to R R &gt; Rpath: mac\n\n# here are the commands to figure it out \nR \nR.home(\"bin\")\n# [1] \"/Library/Frameworks/R.framework/Resources/bin\"\n\nTo color the console I need to have radian path in R settings –&gt; R&gt; Rterm:MACR &gt; Rterm: Mac \"r.rterm.mac\": \"/Library/Frameworks/Python.framework/Versions/3.9/bin/radian\""
  },
  {
    "objectID": "r/02_r_vscode.html#sending-r-code-to-terminal",
    "href": "r/02_r_vscode.html#sending-r-code-to-terminal",
    "title": "02) Using R from VS Code",
    "section": "Sending R code to terminal",
    "text": "Sending R code to terminal\n\n\nCtrl + Shift + P and choose “R: Create R terminal” command\noppure lancio R interactive dalla tendina in Terminal"
  },
  {
    "objectID": "r/02_r_vscode.html#path-to-keybindings.json",
    "href": "r/02_r_vscode.html#path-to-keybindings.json",
    "title": "02) Using R from VS Code",
    "section": "Path to keybindings.json",
    "text": "Path to keybindings.json\n~/Library/Application Support/Code/User/keybindings.json"
  },
  {
    "objectID": "r/02_r_vscode.html#info-on-keybinding",
    "href": "r/02_r_vscode.html#info-on-keybinding",
    "title": "02) Using R from VS Code",
    "section": "Info on Keybinding",
    "text": "Info on Keybinding\nhttps://code.visualstudio.com/docs/getstarted/keybindings"
  },
  {
    "objectID": "r/02_r_vscode.html#fing-lintr-in-vscode",
    "href": "r/02_r_vscode.html#fing-lintr-in-vscode",
    "title": "02) Using R from VS Code",
    "section": "F&$%ing lintr in VSCode",
    "text": "F&$%ing lintr in VSCode\nhttps://github.com/r-lib/lintr#continuous-integration\nYou can tone it down by creating your own `~/.lintr/ file like so\nlinters: with_defaults(\n  line_length_linter = NULL,\n  open_curly_linter = NULL, \n  commented_code_linter = NULL,\n  trailing_whitespace_linter = NULL)"
  },
  {
    "objectID": "r/02_r_vscode.html#other-recommended-extensions",
    "href": "r/02_r_vscode.html#other-recommended-extensions",
    "title": "02) Using R from VS Code",
    "section": "other recommended extensions",
    "text": "other recommended extensions\nThere are a few other recommended installations for the extension:\n\nlanguageserver (R packages, so can be installed from R)\nhttpgd (R packages, so can be installed from R)\nVSCode-R-Debugger\nQuarto"
  },
  {
    "objectID": "r/02_r_vscode.html#path-to-open-settings.json",
    "href": "r/02_r_vscode.html#path-to-open-settings.json",
    "title": "02) Using R from VS Code",
    "section": "Path to open settings.json\n",
    "text": "Path to open settings.json\n\n\n[from Finder] Go to /Users/luisamimmi/Library/Application Support/Code/User/settings.json\n[from VS code] Open by ctr+shift+P and then “Preferences: Open Settings (json)”\n\nOpen in finder\nFrom shell\n\nopen -a Finder /Library/Frameworks/R.framework/Resources"
  }
]