---
title: "Intro to Unix and shell"
date: "`r Sys.time()`"
date-format: "ddd, D of MMMM, YYYY"
date-modified: last-modified
lang: en
editor: source
engine: knitr
## ------  general Output Options
execute:     
  eval: false    # actually run? 
  echo: true     #  include source code in output
  warning: false  #  include warning code in output
  error: false    #  include error code in output
  output: false   # include output code in output (CHG in BLOCKS)
  # include: false   # R still runs but code and results DON"T appear in output  
  cache: false # normalmnte false
toc: true
fig-cap-location: top
tbl-cap-location: top
format:
  html:
    # theme: flatly #spacelab
    code-fold: false # redundant bc echo false 
    toc-depth: 3
    toc_float: true
    toc-location: left
    toc-title: Outline
    #embed-resources: true # external dependencies embedded (Not in ..._files/)
  # pdf:
  #   toc-depth: 2
  #   toc-title: Indice
  #   highlight-style: github
  #   #lang: it
  #   embed-resources: true # external dependencies embedded (Not in ..._files/)
format-links: false
---

# Reference

Great (paid) LinkedIn course by Kevin Skoglund ["Unix essential training"](https://www.linkedin.com/learning/unix-essential-training/unix-text-editors)

### What is Unix? 

+ an OS developed by AT&T employes at Bell Labs in the 1960s/70s
+ in 1972 it is rewritten in C programming, which made it portable. It then spread outside AT&T 
+ it still powers devises all around 
+ you can use it from the Command line or from GUI interfaces

### What are the kernell and shell?  

+ `kernel` is the core of the OS. it allocates time and memory to processes
+ `shells` is the outer layer of the OS. it sends reuqests to the kernel
  + you can choose from different shells (`sh`, `bash`, `zsh`, etc.)


# Files and directories 


```{bash}
pwd

ls
# formatted differently
ls -l
ls -lh # size (5 col) is human readable
ls -a # include hidden
ls -a -lh

```


```{bash}
pwd
# User home directory 
cd ~ # /Users/luisamimmi
# go back to the "last" dir you were in !
cd -

```

# Creating Files

```{bash}
cd shell
# open text editor
nano
# then write inside 
'ctrl+X' # to exit
'Y' # yes to save 
# write name
'enter' # to save

nano test2.text
```

# Reading files 

```{bash}
cd ..
ls
cat README.md

# pagination 
more 

# opens a viewer for scrolling 
less README.md
# then press `f` for forward
# or press `b` for backward
# or press `q` for done
```

# Creating directories
+ `-p` = add NEW parent dir

```{bash}
pwd
mkdir  dir 
ls -l

mkdir shell/dir
ls -l

# to create a dir in a NEW Parent dir 
mkdir -p shell/newdir/dir
```

# Move and rename 

+ `-f` = force overwriting (default!)
+ `-n` = no overwriting 
+ `-i` = interactive overwrigitn (ask!)

```{bash}
cd shell 

# Move <target> <destination file>
mv test.txt newdir/dir/test.txt

# Move <target> <directory>(no file) # OK as well
mv newdir/dir/test.txt newdir

# Rename (automatic)
touch second_test.txt 
# Move <target> <RENAMED destination file>
mv second_test.txt newdir/dir/2_test.txt
ls -l newdir
ls newdir/dir/
```

# Copy 
```{bash}
pwd
cd newdir
ls -l
cp test.txt dir/

cd dir
ls -l


```

+ `-R` = recursive (if a dir also its content )
```{bash}
pwd
cd ..
cp -R dir dir2
```

# Deleting files and directories 

In Unix when you delete something, it is gone **immediately** and **forever**! 
```{bash}
pwd
ls -l
# file 
rm test.txt
# dir 
rm -R dir2
```


# Searching for files and directories 
`find <path> <expression>`

+ `*` = zero or more characters (glob) 
+ `?` = any one character 
+ `[]`= any character in the brackets 

```{bash}
cd ~/Github/_nerd_help/
find shell -name "test.txt"
find . -name "test.txt"

find shell -name "*test*"
find shell -name "??test.txt"
find shell -name "*[.txt.qmd]"
```

# Creating symbolic links

`sym link`s are similar to shortcuts or alias in a GUI systme 

+ `-s` = needed otherwise it is a hard link not a simbolic one 
+ It creates a reference to a **file path**, NOT a file!
  + which means it breaks if the file is moved!!!
```{bash}
cd ../..
cd _nerd*/shell
pwd
ls -l

# ln -s <file_name> <symlink_name>(PATH)
# symlink the shell_intro.qmd file 
ln -s ~/Github/_nerd_help/shell/shell_intro.qmd ~/Desktop/shell_intro_sl.qmd

# check 
cd ~/Desktop
ls -l
  # lrwxr-xr-x@  .... shell_intro.qmd -> shell_intro.qmd
 ls -l shell_intro_sl.qmd 
cat shell_intro_sl.qmd  
```


## Do it to bring shared stuff in Others' google Drive into My Drive 
1. Go to google drive under `Shared with me`/`Condivisi con me`
2. Right click and scroll to [`Manage`/`Organizza`]/`Add shortcut to Drive`/`Aggiungi scorciatoia` 
3. Choose the location `My Drive`

